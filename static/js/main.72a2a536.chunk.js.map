{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/RoutesComponent.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","wrapper","src","avatar","image","alt","angle","bodyMessage","name","message","time","messageData","HW1","SuperButton","red","restProps","finalClassName","button","default","Affair","affair","onClick","deleteAffairCallback","_id","priority","Affairs","mappedAffairs","data","map","a","someClass","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","input","e","currentTarget","value","key","Greeting","setNameCallback","addUser","addUserKey","totalUsers","inputClass","charCode","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","alert","length","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Error404","Junior","JuniorPlus","PATH","RoutesComponent","path","element","to","Header","link","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.72a2a536.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__2kSaY\",\"bodyMessage\":\"Message_bodyMessage__97h_z\",\"angle\":\"Message_angle__3u-51\",\"image\":\"Message_image__11DI0\",\"name\":\"Message_name__2GbmM\",\"message\":\"Message_message__32udo\",\"time\":\"Message_time__3xrqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3CMaa\",\"error\":\"Greeting_error__1uqJr\",\"errorMessage\":\"Greeting_errorMessage__283EP\",\"totalUsers\":\"Greeting_totalUsers__3i_9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__S16mA\",\"superInput\":\"SuperInputText_superInput__2i0sF\",\"errorInput\":\"SuperInputText_errorInput__9vg7P\",\"error\":\"SuperInputText_error__imE3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__kvhHR\",\"affair\":\"Affairs_affair__QItCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Z-az\",\"red\":\"SuperButton_red__3CtCT\",\"button\":\"SuperButton_button__PJGf4\",\"blink\":\"SuperButton_blink__3z4PN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3QlFw\",\"spanClassName\":\"SuperCheckbox_spanClassName__1CgHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2y0cR\",\"column\":\"HW4_column__BB205\",\"testSpanError\":\"HW4_testSpanError__10TRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2KcHM\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nexport function Message(props: MessagePropsType) {\n    return (\n        <div className={s.wrapper}>\n            <img src={props.avatar} className={s.image} alt=\"avatar\"/>\n            <div className={s.angle}/>\n            <div className={s.bodyMessage}>\n                <h4 className={s.name}>{props.name}</h4>\n                <p className={s.message}>{props.message}</p>\n                <p className={s.time}>{props.time}</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Message} from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://i.pinimg.com/1200x/e6/14/45/e614453351ce026b7d4b3e496b46d833.jpg',\n    name: 'Reiner Braun',\n    message: 'Просто делай, что должен и двигайся вперёд. Что нам ещё остаётся?',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\n\n    return (\n        <div className={s.affair}>\n            {/*<button onClick={deleteCallback}>X</button>*/}\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\n            {props.affair.name} ({props.affair.priority})\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {Dispatch, SetStateAction} from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (s: FilterType) => void;\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id}\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => props.setFilter('all')\n    const setHigh = () => props.setFilter('high')\n    const setMiddle = () => props.setFilter('middle')\n    const setLow = () => props.setFilter('low')\n\n    return (\n        <div className={s.someClass}>\n\n            {mappedAffairs}\n\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') {\n        return affairs\n    } else {\n        return affairs.filter(f => f.priority === filter)\n    }\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return (affairs.filter(f => f._id !== _id))\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${className} ${error ? s.errorInput : s.superInput} ${s.input}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: string) => void\n    addUser: () => void  // need to fix any\n    addUserKey: (e: number) => void\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, addUserKey, error, totalUsers}\n) => {\n    const inputClass = error ? s.error : ''\n\n    return (\n        <div>\n            <SuperInputText value={name}\n                   onChange={(e) => setNameCallback(e.currentTarget.value)} className={inputClass}\n                   onKeyPress={(e) => addUserKey(e.charCode)}\n            />\n            <SuperButton onClick={addUser}>Add</SuperButton>\n            <span className={s.totalUsers}>{totalUsers}</span>\n            <span className={s.errorMessage}>{error}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\nimport s from './Greeting.module.css'\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: string) => {\n        setName(e)\n        setError('')\n    }\n    const addUser = () => {\n        if (name === '') {\n            setError('Name is require!')\n        } else {\n            alert(`Hello ${name}!`)\n            addUserCallback(name)\n        }\n        setName('')\n    }\n    const addUserKey = (e: number) => {\n        if (e === 13) {\n            addUser()\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <div className={s.someClass}>\n            <Greeting\n                name={name}\n                setNameCallback={setNameCallback}\n                addUser={addUser}\n                addUserKey={addUserKey}\n                error={error}\n                totalUsers={totalUsers}\n            />\n        </div>\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {strict} from \"assert\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const newUser = {_id: v1(), name}\n        setUsers([newUser, ...users])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('Введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            junior\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            junior plus\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React from 'react'\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport {Navigate, Route, Routes} from \"react-router-dom\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n    // add paths\n}\n\nfunction RoutesComponent() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Routes>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\n                exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\n                {/*// add routes*/}\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={'*'} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default RoutesComponent\n","import React from 'react'\nimport s from './Header.module.css'\nimport {PATH} from \"./RoutesComponent\";\nimport {NavLink} from \"react-router-dom\";\n\n\nfunction Header() {\n    return (\n        <div>\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link}>pre-junior</NavLink>\n            <NavLink to={PATH.JUNIOR} className={s.link}>junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} className={s.link}>junior+</NavLink>\n            <div className={s.block}/>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport RoutesComponent from './RoutesComponent'\n\nfunction HW5() {\n    return (\n        <div>\n                <Header/>\n\n                <RoutesComponent/>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nexport function App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {App} from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={'Ignat-dz'}>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}